{
    "apply(_tcpCwrTotalCount,backward)": "#bwTCPflag:cwr",
    "apply(_tcpCwrTotalCount,forward)": "#fwTCPflag:cwr",
    "apply(max(_interPacketTimeSeconds),backward)": "max(bwPktIAT)",
    "apply(max(_interPacketTimeSeconds),forward)": "max(fwPktIAT)",
    "apply(max(ipTTL),backward)": "max(bwTTL)",
    "apply(max(ipTTL),forward)": "max(fwTTL)",
    "apply(max(ipTotalLength),backward)": "max(bwPktLength)",
    "apply(max(ipTotalLength),forward)": "max(fwPktLength)",
    "apply(mean(_interPacketTimeSeconds),backward)": "mean(bwPktIAT)",
    "apply(mean(_interPacketTimeSeconds),forward)": "mean(fwPktIAT)",
    "apply(mean(ipTTL),backward)": "mean(bwTTL)",
    "apply(mean(ipTTL),forward)": "mean(fwTTL)",
    "apply(mean(ipTotalLength),backward)": "mean(bwPktLength)",
    "apply(mean(ipTotalLength),forward)": "mean(fwPktLength)",
    "apply(min(_interPacketTimeSeconds),backward)": "min(bwPktIAT)",
    "apply(min(_interPacketTimeSeconds),forward)": "min(fwPktIAT)",
    "apply(min(ipTTL),backward)": "min(bwTTL)",
    "apply(min(ipTTL),forward)": "min(fwTTL)",
    "apply(min(ipTotalLength),backward)": "min(bwPktLength)",
    "apply(min(ipTotalLength),forward)": "min(fwPktLength)",
    "apply(octetTotalCount,backward)": "bwBytes",
    "apply(octetTotalCount,forward)": "fwBytes",
    "apply(packetTotalCount,backward)": "bwPkts",
    "apply(packetTotalCount,forward)": "fwPkts",
    "apply(stdev(_interPacketTimeSeconds),backward)": "stdev(bwPktIAT)",
    "apply(stdev(_interPacketTimeSeconds),forward)": "stdev(fwPktIAT)",
    "apply(stdev(ipTTL),backward)": "stdev(bwTTL)",
    "apply(stdev(ipTTL),forward)": "stdev(fwTTL)",
    "apply(stdev(ipTotalLength),backward)": "stdev(bwPktLength)",
    "apply(stdev(ipTotalLength),forward)": "stdev(fwPktLength)",
    "apply(tcpAckTotalCount,backward)": "#bwTCPflag:ack",
    "apply(tcpAckTotalCount,forward)": "#fwTCPflag:ack",
    "apply(tcpFinTotalCount,backward)": "#bwTCPflag:fin",
    "apply(tcpFinTotalCount,forward)": "#fwTCPflag:fin",
    "apply(tcpSynTotalCount,backward)": "#bwTCPflag:syn",
    "apply(tcpSynTotalCount,forward)": "#fwTCPflag:syn",
    "destinationTransportPort": "dstPort",
    "flowDurationMilliseconds": "duration",
    "protocolIdentifier": "protocol",
    "sourceTransportPort": "srcPort"
}
